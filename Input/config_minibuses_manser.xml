<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE config SYSTEM "http://www.matsim.org/files/dtd/config_v2.dtd">
<config>


<module name="SBBPt" >
  <param name="deterministicServiceModes" value="detPt" />
  <param name="createLinkEventsInterval" value="1" />
</module>

<!-- ====================================================================== -->

	<module name="p" >

		<!-- removes the strategy from the choice set at the beginning of the given iteration -->
		<param name="ModuleDisableInIteration_1" value="400" />

		<!-- removes the strategy from the choice set at the beginning of the given iteration -->
		<param name="ModuleDisableInIteration_2" value="400" />

		<!-- removes the strategy from the choice set at the beginning of the given iteration -->
		<param name="ModuleDisableInIteration_3" value="400" />

		<!-- removes the strategy from the choice set at the beginning of the given iteration -->
		<param name="ModuleDisableInIteration_4" value="400" />

		<!-- removes the strategy from the choice set at the beginning of the given iteration -->
		<param name="ModuleDisableInIteration_5" value="400" />

		<!-- removes the strategy from the choice set at the beginning of the given iteration -->
		<param name="ModuleDisableInIteration_6" value="400" />
		
		<!-- removes the strategy from the choice set at the beginning of the given iteration -->
		<param name="ModuleDisableInIteration_7" value="400" />

		<!-- parameters of the strategy -->
		<param name="ModuleParameter_1" value="" />

		<!-- parameters of the strategy -->
		<param name="ModuleParameter_2" value="" />

		<!-- parameters of the strategy -->
		<param name="ModuleParameter_3" value="1.0,900,true,true" />

		<!-- parameters of the strategy -->
		<param name="ModuleParameter_4" value="1500.0,100.0,0.2" />

		<!-- parameters of the strategy -->
		<param name="ModuleParameter_5" value="1500.0,100.0,0.2,true" />

		<!-- parameters of the strategy -->
		<param name="ModuleParameter_6" value="1.0,true" />
		
		<!-- parameters of the strategy -->
		<param name="ModuleParameter_7" value="" />

		<!-- probability that a strategy is applied to a given a plan. despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_1" value="0.075" />

		<!-- probability that a strategy is applied to a given a plan. despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_2" value="0.075" />

		<!-- probability that a strategy is applied to a given a plan. despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_3" value="0.25" />

		<!-- probability that a strategy is applied to a given a plan. despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_4" value="0.075" />

		<!-- probability that a strategy is applied to a given a plan. despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_5" value="0.075" />

		<!-- probability that a strategy is applied to a given a plan. despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_6" value="0.25" />
		
		<!-- probability that a strategy is applied to a given a plan. despite its name, this really is a ``weight'' -->
		<param name="ModuleProbability_7" value="0.2" />

		<!-- name of strategy -->
		<param name="Module_1" value="WeightedStartTimeExtension" />

		<!-- name of strategy -->
		<param name="Module_2" value="WeightedEndTimeExtension" />

		<!-- name of strategy -->
		<param name="Module_3" value="ReduceTimeServedRFare" />

		<!-- name of strategy -->
		<param name="Module_4" value="EndRouteExtensionBF" />

		<!-- name of strategy -->
		<param name="Module_5" value="SidewaysRouteExtensionBF" />

		<!-- name of strategy -->
		<param name="Module_6" value="ReduceStopsToBeServedRFareBF" />
		
		<!-- name of strategy -->
		<param name="Module_7" value="ChooseVehicleType" />
		
		<!-- name of strategy -->
		<param name="PVeh_1" value="Minibus" />
		<param name="VehCapacity_1" value="3" />
		<param name="VehEarningsPerPaxKilometer_1" value=".55" />
		<param name="VehEarningsPerPaxBoarding_1" value="0" />
		<param name="VehCostPerDay_1" value="180" />
		<param name="VehCostPerKilometer_1" value="2.0" />
		<param name="VehCostPerHour_1" value="40" />
		<param name="PricePerVehicleBought_1" value="750" />
		<param name="PricePerVehicleSold_1" value="600" />
		
		<param name="PVeh_2" value="Standardbus" />
		<param name="VehCapacity_2" value="9" />
		<param name="VehEarningsPerPaxKilometer_2" value=".55" />
		<param name="VehEarningsPerPaxBoarding_2" value="0" />
		<param name="VehCostPerDay_2" value="234" />
		<param name="VehCostPerKilometer_2" value="2.6" />
		<param name="VehCostPerHour_2" value="52" />
		<param name="PricePerVehicleBought_2" value="975" />
		<param name="PricePerVehicleSold_2" value="800" />
		
		<param name="PVeh_3" value="Gelenkbus" />
		<param name="VehCapacity_3" value="15" />
		<param name="VehEarningsPerPaxKilometer_3" value=".55" />
		<param name="VehEarningsPerPaxBoarding_3" value="0" />
		<param name="VehCostPerDay_3" value="270" />
		<param name="VehCostPerKilometer_3" value="3.0" />
		<param name="VehCostPerHour_3" value="60.0" />
		<param name="PricePerVehicleBought_3" value="1125" />
		<param name="PricePerVehicleSold_3" value="1025" />

		<!--
		<param name="PVeh_4" value="Tram" />
		<param name="VehCapacity_4" value="27" />
		<param name="VehEarningsPerPaxKilometer_4" value=".55" />
		<param name="VehEarningsPerPaxBoarding_4" value="0" />
		<param name="VehCostPerDay_4" value="324" />
		<param name="VehCostPerKilometer_4" value="3.8" />
		<param name="VehCostPerHour_4" value="72" />
		<param name="PricePerVehicleBought_4" value="1350" />
		<param name="PricePerVehicleSold_4" value="1200" />-->
		
		
		<!-- the mode of transport in which the paratransit operates -->
		<param name="OperationMode" value="detPt" />

		<!-- comma separated integer-values, as used in NetworkCalcTopoTypes -->
		<param name="TopoTypesForStops" value="null" />

		<!-- cost per vehicle and day - will prevent companies from operating only short periods of a day -->
		<param name="costPerVehicleAndDay" value="250.0" />

		<!-- The amount of time a vehicle is delayed by one single alighting passenger in seconds. -->
		<param name="delayPerAlightingPassenger" value="0" />

		<!-- The amount of time a vehicle is delayed by one single boarding passenger in seconds. -->
		<param name="delayPerBoardingPassenger" value="0" />

		<!-- No more new operators will be found beginning with the iteration specified -->
		<param name="disableCreationOfNewOperatorsInIteration" value="350" />

		<!-- serial and parallel are permitted. Default is serial. -->
		<param name="doorOperationMode" value="serial" />

		<!-- The rest time of a driver at the end of a complete tour in seconds. Defaults to 60 seconds. -->
		<param name="driverRestTime" value="180.0" />

		<!-- Price an agent has to pay when boarding, regardless how far he will travel -->
		<param name="earningsPerBoardingPassenger" value="0" />

		<!-- earnings per passenger kilometer -->
		<param name="earningsPerKilometerAndPassenger" value="0.55" />
		
		<param name="subsidyPerBoardingPassenger" value="0.0" />

		<!-- The grid size (length and height) for aggregating stuff in various modules (RandomStopProvider, ActivityLocationsParatransitUser, PFranchise). Default of Double.maxvalue effectively aggregates all data points into one gridPoint -->
		<param name="gridSize" value="3000.0" />

		<!-- The budget a new operator is initialized with -->
		<param name="initialBudget" value="6000.0" />

		<!-- will log operators individually if set to true -->
		<param name="logOperators" value="true" />

		<!-- max x coordinate for service area -->
		<param name="maxX" value="1.7976931348623157E308" />

		<!-- max y coordinate for service area -->
		<param name="maxY" value="1.7976931348623157E308" />

		<!-- Merges all routes of a transit line that have the same sequence of stops. Does not respect the time profile of the routes. Default is false. -->
		<param name="mergeTransitLine" value="false" />

		<!-- min distance the two initial stops of a new operator's first route should be apart. Default is 1.0. Set to 0.0 to allow for the same stop being picked as start and end stop. -->
		<param name="minInitialStopDistance" value="1.0" />

		<!-- min time of operation of each operator in seconds -->
		<param name="minOperationTime" value="0.0" />

		<!-- min x coordinate for service area -->
		<param name="minX" value="-1.7976931348623157E308" />

		<!-- min y coordinate for service area -->
		<param name="minY" value="-1.7976931348623157E308" />

		<!-- number of iterations an operator will survive with a negative scoring -->
		<param name="numberOfIterationsForProspecting" value="5" />

		<!-- number of operators operating -->
		<param name="numberOfOperators" value="25" />

		<!-- Type of operator to be used -->
		<param name="operatorType" value="CarefulMultiPlanOperator" />

		<!-- This String will be used to identify all components of the paratransit system, e.g. vehicles and drivers -->
		<param name="pIdentifier" value="para_" />

		<!-- Passenger car equilvalents of one paratransit vehicle -->
		<param name="passengerCarEquivalents" value="0.3" />

		<!-- Agents will board every vehicles serving the destination (stop), if set to true. Set to false, to force agents to take only vehicles of the line planned. Default is false. -->
		<param name="passengersBoardEveryLine" value="false" />

		<!-- number of passengers per vehicle -->
		<param name="paxPerVehicle" value="20" />

		<!-- Freespeed of link will be modified by factor. Resulting link travel time is written to transit schedule. Default is 1.0 aka freespeed of the link. -->
		<param name="planningSpeedFactor" value=".68" />

		<!-- price of one vehicle bought -->
		<param name="pricePerVehicleBought" value="1000.0" />

		<!-- price of one vehicle sold -->
		<param name="pricePerVehicleSold" value="800.0" />

		<!-- Uses a experimental connection scan algorithm for routing if set to 'raptor'. Defaults to MATSim standard router. -->
		<param name="ptRouter" value="none set" />

		<!-- All agents stuck will be rerouted at the beginning of an iteration, if set to true. -->
		<param name="reRouteAgentsStuck" value="false" />

		<!-- The route provider used. Currently, there are SimpleCircleScheduleProvider and SimpleBackAndForthScheduleProvider -->
		<param name="routeProvider" value="TimeAwareComplexCircleScheduleProvider" />

		<!-- a shapefile containing a shape of the service-area or a textfile containing a sequence of x/y values, describing a line string -->
		<param name="serviceAreaFile" value="../perimeter/ScenarioBoundaries.shp" />

		<!-- Target share of profitable operators - Set useAdaptiveNumberOfOperators=true to enable this feature -->
		<param name="shareOfOperatorsWithProfit" value="0.9" />

		<!-- Link cannot serve as paratransit stop, if its speed limit is equal or higher than the limit set here. Default is +INF -->
		<param name="speedLimitForStops" value="0.0" />

		<!-- Initial plan will start operating 0-24 hours -->
		<param name="startWith24Hours" value="false" />

		<!-- The size of a time slot aggregating stuff in various modules (TimeProvider, CreateNewPlan). Default of Double.maxvalue effectively aggregates all data points into one time slot -->
		<param name="timeSlotSize" value="900.0" />

		<!-- Will initialize one operator for each transit line with the given time of operation and number of vehicles -->
		<param name="transitScheduleToStartWith" value="null" />

		<!-- Will try to adapt the number of operators to meet the given share of profitable operators if set to true -->
		<param name="useAdaptiveNumberOfOperators" value="true" />

		<!-- Will use a franchise system if set to true -->
		<param name="useFranchise" value="true" />

		<!-- Maximum velocity of minibuses. Default is Double.POSITIVE_INFINITY. -->
		<param name="vehicleMaximumVelocity" value="16.66666666666667" />

		<!-- computes operator revenues based on the change in welfare. EXPERIMENTAL! -->
		<param name="welfareMaximization" value="false" />

		<!-- number of iterations the gexf output gets updated. Set to zero to turn this feature off -->
		<param name="writeGexfStatsInterval" value="0" />

		<!-- will calculate common performance metrics if set to true, default is false -->
		<param name="writeMetrics" value="false" />

		<!-- interval in which statistics will be plotted. Set to zero to turn this feature off. Set to something larger than the total number of iterations to turn off the plots, but write the statistics file anyway -->
		<param name="writeStatsInterval" value="50" />

	</module>

<!-- ====================================================================== -->

	<module name="JDEQSim" >
		<param name="carSize" value="7.5" />
		<param name="endTime" value="undefined" />
		<param name="flowCapacityFactor" value="1.0" />
		<param name="gapTravelSpeed" value="15.0" />
		<param name="minimumInFlowCapacity" value="1800.0" />
		<param name="squeezeTime" value="1800.0" />
		<param name="storageCapacityFactor" value="1.0" />
	</module>

<!-- ====================================================================== -->

	<module name="TimeAllocationMutator" >

		<!-- Default:true; Defines whether time mutation changes an activity's duration. -->
		<param name="mutationAffectsDuration" value="true" />

		<!-- Default:1800.0; Defines how many seconds a time mutation can maximally shift a time. -->
		<param name="mutationRange" value="1800.0" />

	</module>

<!-- ====================================================================== -->

	<module name="changeMode" >
		<param name="ignoreCarAvailability" value="true" />
		<param name="modes" value="car,pt" />
	</module>

<!-- ====================================================================== -->

	<module name="controler" >

		<!-- Sets whether graphs showing some analyses should automatically be generated during the simulation. The generation of graphs usually takes a small amount of time that does not have any weight in big simulations, but add a significant overhead in smaller runs or in test cases where the graphical output is not even requested. -->
		<param name="createGraphs" value="true" />

		<!-- true if at the end of a run, plans, network, config etc should be dumped to a file -->
		<param name="dumpDataAtEnd" value="true" />

		<!-- Default=false. If enabled, the router takes travel times needed for turning moves into account. Cannot be used if the (Fast)AStarLandmarks routing or TravelTimeCalculator.separateModes is enabled. -->
		<param name="enableLinkToLinkRouting" value="false" />

		<!-- Default=xml; Specifies the file format for writing events. Currently supported: xml.
		Multiple values can be specified separated by commas (','). -->
		<param name="eventsFileFormat" value="xml" />

		<!-- Default=0;  -->
		<param name="firstIteration" value="0" />

		<!-- Default=1000;  -->
		<param name="lastIteration" value="500" />

		<!-- Defines which mobility simulation will be used. Currently supported: qsim JDEQSim 
		Depending on the chosen mobsim, you'll have to add additional config modules to configure the corresponding mobsim.
		For 'qsim', add a module 'qsim' to the config. -->
		<param name="mobsim" value="qsim" />

		<param name="outputDirectory" value="output/" />

		<!-- Possible values: failIfDirectoryExists, overwriteExistingFiles, deleteDirectoryIfExists -->
		<param name="overwriteFiles" value="deleteDirectoryIfExists" />

		<!-- The type of routing (least cost path) algorithm used, may have the values: Dijkstra, FastDijkstra, AStarLandmarks or FastAStarLandmarks -->
		<param name="routingAlgorithmType" value="Dijkstra" />

		<!-- An identifier for the current run which is used as prefix for output files and mentioned in output xml files etc. -->
		<param name="runId" value="null" />

		<!-- Comma-separated list of visualizer output file formats. `transims', `googleearth', and `otfvis'. -->
		<param name="snapshotFormat" value="" />

		<!-- iterationNumber % writeEventsInterval == 0 defines in which iterations events are written to a file. `0' disables events writing completely. -->
		<param name="writeEventsInterval" value="250" />

		<!-- iterationNumber % writePlansInterval == 0 defines (hopefully) in which iterations plans are written to a file. `0' disables plans writing completely.  Some plans in early iterations are always written -->
		<param name="writePlansInterval" value="250" />

		<!-- iterationNumber % writeSnapshotsInterval == 0 defines in which iterations snapshots are written to a file. `0' disables snapshots writing completely -->
		<param name="writeSnapshotsInterval" value="1" />
	</module>

<!-- ====================================================================== -->

	<module name="counts" >

		<!-- Transport modes that will be respected for the counts comparison. 'car' is default, which includes also bussed from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the counts comparison. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeCountsInterval -->
		<param name="averageCountsOverIterations" value="5" />

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- If true, link counts from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- input file name to counts package -->
		<param name="inputCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="txt" />

		<!-- Specifies how often the counts comparison should be calculated and written. -->
		<param name="writeCountsInterval" value="500" />
	</module>

<!-- ====================================================================== -->

	<module name="facilities" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- <param name="inputFacilitiesFile" value="zurich_facilities.xml.gz" />  -->
		<param name="inputFacilityAttributesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="global" >
		<param name="coordinateSystem" value="Atlantis" />

		<!-- "global" number of threads.  This number is used, e.g., for replanning, but NOT in the mobsim.  This can typically be set to as many cores as you have available, or possibly even slightly more. -->
		<param name="numberOfThreads" value="8" />

		<param name="randomSeed" value="4711" />
	</module>

<!-- ====================================================================== -->

<!--	<module name="households" >
		<param name="inputFile" value="zurich_households.xml.gz" />
		<param name="inputHouseholdAttributesFile" value="zurich_household_attributes.xml.gz" />
		<param name="insistingOnUsingDeprecatedHouseholdsAttributeFile" value="true" />
	</module> auskommentiert by Meyer-->

<!-- ====================================================================== -->

	<module name="linkStats" >

		<!-- Specifies over how many iterations the link volumes should be averaged that are used for the link statistics. Use 1 or 0 to only use the link volumes of a single iteration. This values cannot be larger than the value specified for writeLinkStatsInterval -->
		<param name="averageLinkStatsOverIterations" value="5" />

		<!-- Specifies how often the link stats should be calculated and written. Use 0 to disable the generation of link stats. -->
		<param name="writeLinkStatsInterval" value="-1" />
	</module>

<!-- ====================================================================== -->

	<module name="network" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<param name="inputChangeEventsFile" value="null" />
		<param name="inputNetworkFile" value="zurich_network.xml.gz" />
		<param name="laneDefinitionsFile" value="null" />
		<param name="timeVariantNetwork" value="false" />
	</module>

<!-- ====================================================================== -->

	<module name="parallelEventHandling" >

		<!-- Estimated number of events during mobsim run. An optional optimization hint for the framework. -->
		<param name="estimatedNumberOfEvents" value="null" />

		<!-- Number of threads for parallel events handler. 0 or null means the framework decides by itself. -->
		<param name="numberOfThreads" value="null" />

		<!-- If enabled, each event handler is assigned to its own thread. Note that enabling this feature disabled the numberOfThreads option! This feature is still experimental! -->
		<param name="oneThreadPerHandler" value="false" />

		<!-- If enabled, it is ensured that all events that are created during a time step of the mobility simulation are processed before the next time step is simulated. E.g. neccessary when within-day replanning is used. -->
		<param name="synchronizeOnSimSteps" value="true" />
	</module>

<!-- ====================================================================== -->

	<module name="planCalcScore" >

		<!-- logit model scale parameter. default: 1.  Has name and default value for historical reasons (see Bryan Raney's phd thesis). -->
		<param name="BrainExpBeta" value="1.0" />

		<param name="PathSizeLogitBeta" value="1.0" />

		<!-- fraction of iterations at which MSA score averaging is started. The matsim theory department suggests to use this together with switching off choice set innovation (where a similar switch exists), but it has not been tested yet. -->
		<param name="fractionOfIterationsToStartScoreMSA" value="null" />

		<!-- new_score = (1-learningRate)*old_score + learningRate * score_from_mobsim.  learning rates close to zero emulate score averaging, but slow down initial convergence -->
		<param name="learningRate" value="1.0" />

		<!-- There used to be a plateau between duration=0 and duration=zeroUtilityDuration. This caused durations to evolve to zero once they were below zeroUtilityDuration, causing problems.  Only use this switch if you need to be backwards compatible with some old results.  (changed nov'13) -->
		<param name="usingOldScoringBelowZeroUtilityDuration" value="false" />

		<!-- write a plans file in each iteration directory which contains what each agent actually did, and the score it received. -->
		<param name="writeExperiencedPlans" value="false" />

		<parameterset type="scoringParameters" >
			<param name="earlyDeparture" value="-0.0" />
			<param name="lateArrival" value="-18.0" />
			<param name="marginalUtilityOfMoney" value="1.0" />
			<param name="performing" value="6.0" />
			<param name="subpopulation" value="null" />
			<param name="utilityOfLineSwitch" value="-1.0" />
			<param name="waiting" value="-0.0" />
			<param name="waitingPt" value="-6.0" />

			<parameterset type="activityParams" >
				<param name="activityType" value="dummy" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="true" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="02:00:00" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="car interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="pt interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="bike interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="other interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="activityParams" >
				<param name="activityType" value="walk interaction" />
				<param name="closingTime" value="undefined" />
				<param name="earliestEndTime" value="undefined" />
				<param name="latestStartTime" value="undefined" />
				<param name="minimalDuration" value="undefined" />
				<param name="openingTime" value="undefined" />
				<param name="priority" value="1.0" />
				<param name="scoringThisActivityAtAll" value="false" />

				<!-- typical duration of activity.  needs to be defined and non-zero.  in sec. -->
				<param name="typicalDuration" value="undefined" />

				<!-- method to compute score at typical duration.  Options: | uniform | relative | Use uniform for backwards compatibility (all activities same score; higher proba to drop long acts). -->
				<param name="typicalDurationScoreComputation" value="relative" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="car" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="pt" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="walk" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="bike" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="ride" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="-6.0" />

				<param name="mode" value="other" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>

			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="0.0" />

				<param name="mode" value="outside" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="0.0" />

				<param name="mode" value="access_walk" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
			<parameterset type="modeParams" >

				<!-- [utils] alternative-specific constant.  no guarantee that this is used anywhere. default=0 to be backwards compatible for the time being -->
				<param name="constant" value="0.0" />

				<!-- [utils/m] utility of walking per m, normally negative.  this is on top of the time (dis)utility. -->
				<param name="marginalUtilityOfDistance_util_m" value="0.0" />

				<!-- [utils/hr] additional marginal utility of traveling.  normally negative.  this comes on top of the opportunity cost of time -->
				<param name="marginalUtilityOfTraveling_util_hr" value="0.0" />

				<param name="mode" value="egress_walk" />

				<!-- [unit_of_money/m] conversion of distance into money. Normally negative. -->
				<param name="monetaryDistanceRate" value="0.0" />
			</parameterset>
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="plans" >

		<!-- String: minOfDurationAndEndTime tryEndTimeThenDuration endTimeOnly. Anything besides minOfDurationAndEndTime will internally use a different (simpler) version of the TimeAllocationMutator. -->
		<param name="activityDurationInterpretation" value="tryEndTimeThenDuration" />

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputCRS" value="null" />

		<!-- Path to a file containing person attributes (required file format: ObjectAttributes). --> 
		<!-- <param name="inputPersonAttributesFile" value="zurich_population_attributes.xml.gz" />  auskommentiert by Meyer-->

		<param name="inputPlansFile" value="zurich_population.xml.gz" />
		<param name="insistingOnUsingDeprecatedPersonAttributeFile" value="true" />

		<!-- Defines how routes are stored in memory. Currently supported: LinkNetworkRoute, CompressedNetworkRoute. -->
		<param name="networkRouteType" value="LinkNetworkRoute" />

		<!-- (not tested) will remove plan attributes that are presumably not used, such as activityStartTime. default=false -->
		<param name="removingUnnecessaryPlanAttributes" value="false" />

	</module>

<!-- ====================================================================== -->

	<module name="planscalcroute" >

		<!-- All the modes for which the router is supposed to generate network routes (like car) -->
		<param name="networkModes" value="car" />

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.4" />
			<param name="mode" value="bike" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="2.7777777777777777" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.05" />
			<param name="mode" value="walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="1.3888888888888888" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.05" />
			<param name="mode" value="access_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="1.3888888888888888" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.05" />
			<param name="mode" value="egress_walk" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="1.3888888888888888" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="undefined" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="13.88888888888889" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="ride" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="1.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.3" />
			<param name="mode" value="pt" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="2.0" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="null" />
		</parameterset>

		<parameterset type="teleportedModeParameters" >
			<param name="beelineDistanceFactor" value="1.0" />
			<param name="mode" value="outside" />

			<!-- Free-speed factor for a teleported mode. Travel time = teleportedModeFreespeedFactor * <freespeed car travel time>. Insert a line like this for every such mode. Please do not set teleportedModeFreespeedFactor as well as teleportedModeSpeed for the same mode, but if you do, +teleportedModeFreespeedFactor wins over teleportedModeSpeed. -->
			<param name="teleportedModeFreespeedFactor" value="null" />

			<!-- Speed for a teleported mode. Travel time = (<beeline distance> * beelineDistanceFactor) / teleportedModeSpeed. Insert a line like this for every such mode. -->
			<param name="teleportedModeSpeed" value="1000000.0" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="ptCounts" >

		<!-- factor by which to re-scale the simulated values.  necessary when simulation runs with something different from 100%.  needs to be adapted manually -->
		<param name="countsScaleFactor" value="1.0" />

		<!-- distance to distanceFilterCenterNode to include counting stations. The unit of distance is the Euclidean distance implied by the coordinate system -->
		<param name="distanceFilter" value="null" />

		<!-- node id for center node of distance filter -->
		<param name="distanceFilterCenterNode" value="null" />

		<!-- input file containing the alighting (getting off) counts for pt -->
		<param name="inputAlightCountsFile" value="null" />

		<!-- input file containing the boarding (getting on) counts for pt -->
		<param name="inputBoardCountsFile" value="null" />

		<!-- input file containing the occupancy counts for pt -->
		<param name="inputOccupancyCountsFile" value="null" />

		<!-- possible values: `html', `kml', `txt', `all' -->
		<param name="outputformat" value="null" />

		<!-- every how many iterations (starting with 0) counts comparisons are generated -->
		<param name="ptCountsInterval" value="500" />
	</module>

<!-- ====================================================================== -->

	<module name="qsim" >
		<param name="endTime" value="30:00:00" />
		<param name="flowCapacityFactor" value="0.1" />

		<!-- decides if waiting vehicles enter the network after or before the already driving vehicles were moved. Default: false -->
		<param name="insertingWaitingVehiclesBeforeDrivingVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set to false if all seep modes should perform seepage. Default is true (better option). -->
		<param name="isRestrictingSeepage" value="true" />

		<!-- If link dynamics is set as SeepageQ, set to true if seep mode do not consumes any space on the link. Default is false. -->
		<param name="isSeepModeStorageFree" value="false" />

		<!-- default: FIFO; options: FIFO PassingQ SeepageQ -->
		<param name="linkDynamics" value="FIFO" />

		<!-- The (initial) width of the links of the network. Use positive floating point values. This is used only for visualisation. -->
		<param name="linkWidth" value="30.0" />

		<!-- [comma-separated list] Defines which modes are congested modes. Technically, these are the modes that the departure handler of the netsimengine handles.  Effective cell size, effective lane width, flow capacity factor, and storage capacity factor need to be set with diligence.  Need to be vehicular modes to make sense. -->
		<param name="mainMode" value="car" />

		<!-- Shortens a link in the visualization, i.e. its start and end point are moved into towards the center. Does not affect traffic flow.  -->
		<param name="nodeOffset" value="0.0" />

		<!-- Number of threads used for the QSim.  Note that this setting is independent from the "global" threads setting.  In contrast to earlier versions, the non-parallel special version is no longer there. -->
		<param name="numberOfThreads" value="8" />

		<!-- Boolean. `true': stuck vehicles are removed, aborting the plan; `false': stuck vehicles are forced into the next link. `false' is probably the better choice. -->
		<param name="removeStuckVehicles" value="false" />

		<!-- If link dynamics is set as SeepageQ, set a seep mode. Default is bike. -->
		<param name="seepMode" value="bike" />

		<!-- Possible values: minOfEndtimeAndMobsimFinished, onlyUseEndtime -->
		<param name="simEndtimeInterpretation" value="onlyUseEndtime" />

		<!-- Options: maxOfStarttimeAndEarliestActivityEnd onlyUseStarttime  -->
		<param name="simStarttimeInterpretation" value="maxOfStarttimeAndEarliestActivityEnd" />

		<!-- snapshotStyle. One of: equiDist queue withHoles withHolesAndShowHoles kinematicWaves  -->
		<param name="snapshotStyle" value="equiDist" />

		<param name="snapshotperiod" value="00:00:00" />
		<param name="startTime" value="undefined" />
		<param name="storageCapacityFactor" value="1.0" />

		<!-- time in seconds.  Time after which the frontmost vehicle on a link is called `stuck' if it does not move. -->
		<param name="stuckTime" value="108000.0" />

		<param name="timeStepSize" value="00:00:01" />

		<!-- options: queue withHoles kinematicWaves  -->
		<param name="trafficDynamics" value="kinematicWaves" />

		<!-- Set this parameter to true if lanes should be used, false if not. -->
		<param name="useLanes" value="false" />

		<!-- If a route does not reference a vehicle, agents will use the vehicle with the same id as their own. -->
		<param name="usePersonIdForMissingVehicleId" value="true" />

		<!-- If false, the qsim accumulates fractional flows up to one flow unit in every time step.  If true, flows are updated only if an agent wants to enter the link or an agent is added to buffer. Default is true. -->
		<param name="usingFastCapacityUpdate" value="true" />


		<!-- Defines what happens if an agent wants to depart, but the specified vehicle is not available. One of: teleport wait exception  -->
		<param name="vehicleBehavior" value="teleport" />

		<!-- If vehicles should all be the same default vehicle, or come from the vehicles file, or something else.  Possible values:  defaultVehicle modeVehicleTypesFromVehiclesData fromVehiclesData -->
		<param name="vehiclesSource" value="defaultVehicle" />
	</module>

<!-- ====================================================================== -->

	<module name="scenario" >
	</module>

<!-- ====================================================================== -->

	<module name="strategy" >

		<!-- the external executable will be called with a config file as argument.  This is the pathname to a possible skeleton config, to which additional information will be added.  Can be null. -->
		<param name="ExternalExeConfigTemplate" value="null" />

		<!-- time out value (in seconds) after which matsim will consider the external strategy as failed -->
		<param name="ExternalExeTimeOut" value="3600" />

		<!-- root directory for temporary files generated by the external executable. Provided as a service; I don't think this is used by MATSim. -->
		<param name="ExternalExeTmpFileRootDir" value="null" />

		<!-- fraction of iterations where innovative strategies are switched off.  Something link 0.8 should be good.  E.g. if you run from iteration 400 to iteration 500, innovation is switched off at iteration 480 -->
		<param name="fractionOfIterationsToDisableInnovation" value="Infinity" />

		<!-- maximum number of plans per agent.  ``0'' means ``infinity''.  Currently (2010), ``5'' is a good number -->
		<param name="maxAgentPlanMemorySize" value="1" />

		<!-- strategyName of PlanSelector for plans removal.  Possible defaults: WorstPlanSelector SelectRandom SelectExpBetaForRemoval ChangeExpBetaForRemoval PathSizeLogitSelectorForRemoval . The current default, WorstPlanSelector is not a good choice from a discrete choice theoretical perspective. Alternatives, however, have not been systematically tested. kai, feb'12 -->
		<param name="planSelectorForRemoval" value="WorstPlanSelector" />

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="0" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="SubtourModeChoice" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.15" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="ReRoute" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.1" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="PReRoute" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.4" />
		</parameterset>

		<parameterset type="strategysettings" >

			<!-- iteration after which strategy will be disabled.  most useful for ``innovative'' strategies (new routes, new times, ...). Normally, better use fractionOfIterationsToDisableInnovation -->
			<param name="disableAfterIteration" value="-1" />

			<!-- path to external executable (if applicable) -->
			<param name="executionPath" value="null" />

			<!-- strategyName of strategy.  Possible default names: SelectRandomBestScoreKeepLastSelectedChangeExpBetaSelectExpBetaSelectPathSizeLogit (selectors), ReRoute TimeAllocationMutator ChangeLegMode TimeAllocationMutator_ReRoute ChangeSingleLegMode ChangeSingleTripMode SubtourModeChoice ChangeTripMode TripSubtourModeChoice  (innovative strategies). -->
			<param name="strategyName" value="KeepLastSelected" />

			<!-- subpopulation to which the strategy applies. "null" refers to the default population, that is, the set of persons for which no explicit subpopulation is defined (ie no subpopulation attribute) -->
			<param name="subpopulation" value="null" />

			<!-- weight of a strategy: for each agent, a strategy will be selected with a probability proportional to its weight -->
			<param name="weight" value="0.25" />
		</parameterset>
	</module>

<!-- ====================================================================== -->

	<module name="subtourModeChoice" >

		<!-- Defines the chain-based modes, seperated by commas -->
		<param name="chainBasedModes" value="car,bike" />

		<!-- Defines whether car availability must be considered or not. A agent has no car only if it has no license, or never access to a car -->
		<param name="considerCarAvailability" value="false" />

		<!-- Defines all the modes available, including chain-based modes, seperated by commas -->
		<param name="modes" value="car,pt,bike,walk" />
	</module>

<!-- ====================================================================== -->

	<module name="transit" >

		<!-- The Coordinates Reference System in which the coordinates are expressed in the input file. At import, the coordinates will be converted to the coordinate system defined in "global", and willbe converted back at export. If not specified, no conversion happens. -->
		<param name="inputScheduleCRS" value="null" />

		<!-- Optional input file containing additional attributes for transit lines, stored as ObjectAttributes. -->
		<param name="transitLinesAttributesFile" value="null" />

		<!-- Comma-separated list of transportation modes that are handled as transit. Defaults to 'pt'. -->
		<param name="transitModes" value="pt" />

		<!-- Input file containing the transit schedule to be simulated. -->
		<param name="transitScheduleFile" value="zurich_transit_schedule_reduced.xml.gz" />

		<!-- Optional input file containing additional attributes for transit stop facilities, stored as ObjectAttributes. -->
		<param name="transitStopsAttributesFile" value="null" />

		<!-- Set this parameter to true if transit should be simulated, false if not. -->
		<param name="useTransit" value="true" />

		<!-- Input file containing the vehicles used by the departures in the transit schedule. -->
		<param name="vehiclesFile" value="zurich_transit_vehicles.xml.gz" />
	</module>

<!-- ====================================================================== -->

	<module name="transitRouter" >

		<!-- additional time the router allocates when a line switch happens. Can be interpreted as a 'safety' time that agents need to safely transfer from one line to another -->
		<param name="additionalTransferTime" value="0.0" />

		<!-- Factor with which direct walk generalized cost is multiplied before it is compared to the pt generalized cost.  Set to a very high value to reduce direct walk results. -->
		<param name="directWalkFactor" value="1.0" />

		<!-- step size to increase searchRadius if no stops are found -->
		<param name="extensionRadius" value="200.0" />

		<!-- maximum beeline distance between stops that agents could transfer to by walking -->
		<param name="maxBeelineWalkConnectionDistance" value="100.0" />

		<!-- the radius in which stop locations are searched, given a start or target coordinate -->
		<param name="searchRadius" value="1000.0" />
	</module>

<!-- ====================================================================== -->

	<module name="travelTimeCalculator" >

		<!-- Transport modes that will be respected by the travel time collector. 'car' is default, which includes also busses from the pt simulation module. Use this parameter in combination with 'filterModes' = true! -->
		<param name="analyzedModes" value="car" />

		<param name="calculateLinkToLinkTravelTimes" value="false" />
		<param name="calculateLinkTravelTimes" value="true" />

		<!-- If true, link travel times from legs performed on modes not included in the 'analyzedModes' parameter are ignored. -->
		<param name="filterModes" value="false" />

		<!-- The lenght (in sec) of the time period that is splited into time bins; an additional time bin is created to aggregate all travel times collected after maxTime -->
		<param name="maxTime" value="108000" />

		<!-- If true, link travel times are measured and calculated separately for each mode in analyzedModes. Other modes are ignored. If true, filterModes has no effect. -->
		<param name="separateModes" value="false" />

		<!-- How to deal with congested time bins that have no link entry events. `optimistic' assumes free speed (too optimistic); 'experimental_LastMile' is experimental and probably too pessimistic. -->
		<param name="travelTimeAggregator" value="optimistic" />

		<!-- The size of the time bin (in sec) into which the link travel times are aggregated for the router -->
		<param name="travelTimeBinSize" value="900" />

		<!-- possible values: nullTravelTimeCalculatorArray TravelTimeCalculatorHashMap  -->
		<param name="travelTimeCalculator" value="TravelTimeCalculatorArray" />

		<!-- How to deal with link entry times at different positions during the time bin. Currently supported: average, linearinterpolation -->
		<param name="travelTimeGetter" value="average" />
	</module>

<!-- ====================================================================== -->

	<module name="vehicles" >
		<param name="vehiclesFile" value="null" />
	</module>

<!-- ====================================================================== -->

	<module name="vspExperimental" >

		<!-- (do not use except of you have to) There was a problem with pt interaction scoring.  Some people solved it by overwriting the parameters of the pt interaction activity type.  Doing this now throws an Exception.  If you still insist on doing this, set the following to true. -->
		<param name="isAbleToOverwritePtInteractionParams" value="false" />

		<param name="isGeneratingBoardingDeniedEvent" value="false" />

		<!-- if an approximation of the opportunity cost of time is included into the radius calculation for location choice.`true' will be faster, but it is an approximation.  Default is `true'; `false' is available for backwards compatibility. -->
		<param name="isUsingOpportunityCostOfTimeForLocationChoice" value="true" />

		<param name="logitScaleParamForPlansRemoval" value="1.0" />

		<!-- Options: | ignore | info | warn | abort | .  When violating VSP defaults, this results in nothing, logfile infos, logfile warnings, or aborts.  Members of VSP should use `abort' or talk to kai. -->
		<param name="vspDefaultsCheckingLevel" value="ignore" />

		<!-- if true then writes output_events in output directory.  default is `false'. Will only work when lastIteration is multiple of events writing interval -->
		<param name="writingOutputEvents" value="true" />
	</module>

<!-- ====================================================================== -->

</config>

